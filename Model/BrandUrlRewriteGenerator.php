<?php

declare(strict_types=1);

namespace Blacksheep\Brand\Model;

use Blacksheep\Brand\Api\Data\BrandInterface;
use Magento\Store\Model\StoreManagerInterface;
use Magento\UrlRewrite\Service\V1\Data\UrlRewrite;
use Magento\UrlRewrite\Service\V1\Data\UrlRewriteFactory;

class BrandUrlRewriteGenerator
{
    public const ENTITY_TYPE = 'brand';

    public function __construct(
        private UrlRewriteFactory $urlRewriteFactory,
        private BrandUrlPathGenerator $brandUrlPathGenerator,
        private StoreManagerInterface $storeManager
    ) {}

    public function generate(BrandInterface $brand): array
    {
        $urls = [];

        foreach ($this->storeManager->getStores() as $store) {
            $urls[] = $this->createUrlRewrite($brand, (int) $store->getStoreId());
        }

        return $urls;
    }

    private function createUrlRewrite(BrandInterface $brand, int $storeId, int $redirectType = 0): UrlRewrite
    {
        /** @var \Magento\UrlRewrite\Service\V1\Data\UrlRewrite $urlRewrite */
        $urlRewrite = $this->urlRewriteFactory->create();
        $urlRewrite->setStoreId($storeId);
        $urlRewrite->setEntityType(self::ENTITY_TYPE);
        $urlRewrite->setEntityId($brand->getEntityId());
        $urlRewrite->setRequestPath($this->brandUrlPathGenerator->getUrlPathWithSuffix($brand));
        $urlRewrite->setTargetPath($this->brandUrlPathGenerator->getCanonicalUrlPath($brand));
        $urlRewrite->setIsAutogenerated(1);
        $urlRewrite->setRedirectType($redirectType);

        return $urlRewrite;
    }
}
